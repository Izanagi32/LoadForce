'use client';

import React, { useState, useEffect } from 'react';
import { Brain, TrendingUp, AlertTriangle, Target, Lightbulb, Zap, CheckCircle } from 'lucide-react';
import type { CargoItem, CalculationResult } from '@/types/calculation';
import { FuelCostPredictor, RouteRecommendationEngine, type AIHistoricalData, type AIPrediction } from '@/lib/ai';
import { businessAnalyzer } from '@/lib/ai/businessAnalyzer';

interface AIInsightsProps {
  cargoItems: CargoItem[];
  calculationResult: CalculationResult | null;
  className?: string;
}

export default function AIInsights({ cargoItems, calculationResult, className = '' }: AIInsightsProps) {
  const [smartAnalysis, setSmartAnalysis] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ä–æ–∑—É–º–Ω–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
  const generateSmartRecommendations = (calculation: CalculationResult) => {
    const recommendations = [];

    // üí∞ –ê–Ω–∞–ª—ñ–∑ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
    if (calculation.profitMargin < 15) {
      recommendations.push({
        id: 'profit-optimization',
        priority: 'high',
        title: 'üí∞ –ü—ñ–¥–≤–∏—â–∏—Ç–∏ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å',
        description: `–ú–∞—Ä–∂–∞ ${calculation.profitMargin.toFixed(1)}% –Ω–∏–∂—á–µ –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –º—ñ–Ω—ñ–º—É–º—É 15%`,
        action: '–ó–±—ñ–ª—å—à–∏—Ç–∏ —Ñ—Ä–∞—Ö—Ç –Ω–∞ 5-8% –∞–±–æ –∑–Ω–∞–π—Ç–∏ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –≤–∞–Ω—Ç–∞–∂',
        impact: `+${(calculation.totalFreight * 0.05).toFixed(0)} ‚Ç¥ –ø—Ä–∏–±—É—Ç–∫—É`,
        confidence: 85,
        reasoning: [
          '–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –±–µ–∑–ø–µ—á–Ω–∞ –º–∞—Ä–∂–∞ –¥–ª—è –ø–æ–∫—Ä–∏—Ç—Ç—è —Ä–∏–∑–∏–∫—ñ–≤ - 15%',
          '–†–∏–Ω–∫–æ–≤—ñ —É–º–æ–≤–∏ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Ç–∞—Ä–∏—Ñ—ñ–≤',
          '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å –∑ –≤–∏—â–∏–º–∏ –º–∞—Ä–∂–∞–º–∏'
        ]
      });
    }

    // ‚õΩ –ê–Ω–∞–ª—ñ–∑ –≤–∏—Ç—Ä–∞—Ç –Ω–∞ –ø–∞–ª–∏–≤–æ
    const fuelPercentage = (calculation.costs.fuel / calculation.costs.total) * 100;
    if (fuelPercentage > 50) {
      recommendations.push({
        id: 'fuel-optimization',
        priority: 'high',
        title: '‚õΩ –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ –ø–∞–ª–∏–≤–æ',
        description: `${fuelPercentage.toFixed(1)}% –≤–∏—Ç—Ä–∞—Ç - —Ü–µ –ø–∞–ª–∏–≤–æ (–Ω–æ—Ä–º–∞ 45%)`,
        action: '–ï–∫–æ-–≤–æ–¥—ñ–Ω–Ω—è, –≤–∏–±—ñ—Ä –¥–µ—à–µ–≤–∏—Ö –ê–ó–°, —Ç–µ—Ö–æ–≥–ª—è–¥ –¥–≤–∏–≥—É–Ω–∞',
        impact: `-${(calculation.costs.fuel * 0.1).toFixed(0)} ‚Ç¥ –µ–∫–æ–Ω–æ–º—ñ—ó`,
        confidence: 90,
        reasoning: [
          '–ï–∫–æ-–≤–æ–¥—ñ–Ω–Ω—è –º–æ–∂–µ –∑–∞–æ—â–∞–¥–∏—Ç–∏ 10-15% –ø–∞–ª–∏–≤–∞',
          '–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –ê–ó–° –¥–∞—î –µ–∫–æ–Ω–æ–º—ñ—é 3-7 –≥—Ä–Ω/–ª',
          '–¢–µ—Ö–Ω—ñ—á–Ω–∏–π —Å—Ç–∞–Ω –¥–≤–∏–≥—É–Ω–∞ –≤–ø–ª–∏–≤–∞—î –Ω–∞ –≤–∏—Ç—Ä–∞—Ç—É –¥–æ 20%'
        ]
      });
    }

    // üöö –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const loadUtilization = (calculation.totalWeight / 25) * 100;
    if (loadUtilization < 70) {
      recommendations.push({
        id: 'load-optimization',
        priority: 'medium',
        title: 'üì¶ –ó–±—ñ–ª—å—à–∏—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
        description: `–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∏—à–µ ${loadUtilization.toFixed(1)}% –≤–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω–æ—Å—Ç—ñ`,
        action: '–®—É–∫–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∞–Ω—Ç–∞–∂—ñ, LTL –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è, –∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—è',
        impact: `+${((25 - calculation.totalWeight) * 1000).toFixed(0)} ‚Ç¥ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ–≥–æ –¥–æ—Ö–æ–¥—É`,
        confidence: 75,
        reasoning: [
          `–ù–µ–¥–æ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–∞ ${(25 - calculation.totalWeight).toFixed(1)} —Ç–æ–Ω–Ω`,
          '–§—ñ–∫—Å–æ–≤–∞–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏ —Ä–æ–∑–ø–æ–¥—ñ–ª—è—é—Ç—å—Å—è –Ω–∞ –±—ñ–ª—å—à–∏–π –æ–±—Å—è–≥',
          '–ó–±—ñ–ª—å—à–µ–Ω–Ω—è –¥–æ—Ö–æ–¥—É –±–µ–∑ –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π–Ω–æ–≥–æ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç'
        ]
      });
    }

    // üéØ –ê–Ω–∞–ª—ñ–∑ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –º–∞—Ä—à—Ä—É—Ç—É
    const repositioningRatio = calculation.distanceBreakdown.repositioningDistance / calculation.totalDistance;
    if (repositioningRatio > 0.25) {
      recommendations.push({
        id: 'route-optimization',
        priority: 'medium',
        title: 'üó∫Ô∏è –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –º–∞—Ä—à—Ä—É—Ç',
        description: `${(repositioningRatio * 100).toFixed(1)}% –≤—ñ–¥—Å—Ç–∞–Ω—ñ - –ø–æ—Ä–æ–∂–Ω—ñ –ø–µ—Ä–µ—ó–∑–¥–∏`,
        action: '–®—É–∫–∞—Ç–∏ –∑–≤–æ—Ä–æ—Ç–Ω—ñ –≤–∞–Ω—Ç–∞–∂—ñ —á–µ—Ä–µ–∑ –±—ñ—Ä–∂—ñ, –ø–ª–∞–Ω—É–≤–∞—Ç–∏ –∫—ñ–ª—å—Ü–µ–≤—ñ –º–∞—Ä—à—Ä—É—Ç–∏',
        impact: `-${(calculation.costs.fuel * repositioningRatio * 0.5).toFixed(0)} ‚Ç¥ –µ–∫–æ–Ω–æ–º—ñ—ó`,
        confidence: 80,
        reasoning: [
          '–ü–æ—Ä–æ–∂–Ω—ñ –ø–µ—Ä–µ—ó–∑–¥–∏ - –Ω–∞–π–±—ñ–ª—å—à–∞ –≤—Ç—Ä–∞—Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ',
          '–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –≤–∞–Ω—Ç–∞–∂ –º–æ–∂–µ –ø–æ–∫—Ä–∏—Ç–∏ 70-100% –≤–∏—Ç—Ä–∞—Ç –Ω–∞ –ø–∞–ª–∏–≤–æ',
          '–ë—ñ—Ä–∂—ñ –≤–∞–Ω—Ç–∞–∂—ñ–≤ –¥–∞—é—Ç—å –Ω–∞ 15-25% –±—ñ–ª—å—à–µ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤'
        ]
      });
    }

    return recommendations.sort((a, b) => {
      const priorityOrder = { high: 3, medium: 2, low: 1 };
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  };

  // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –±—ñ–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫
  const calculateBusinessScore = (calculation: CalculationResult) => {
    let profitabilityScore = 0;
    if (calculation.profitMargin > 25) profitabilityScore = 100;
    else if (calculation.profitMargin > 20) profitabilityScore = 85;
    else if (calculation.profitMargin > 15) profitabilityScore = 70;
    else if (calculation.profitMargin > 10) profitabilityScore = 50;
    else if (calculation.profitMargin > 5) profitabilityScore = 30;
    else profitabilityScore = 15;

    const loadFactor = calculation.totalWeight / 25;
    let efficiencyScore = Math.round(loadFactor * 100);
    
    const fuelPercentage = (calculation.costs.fuel / calculation.costs.total) * 100;
    if (fuelPercentage < 45) efficiencyScore += 10;
    if (fuelPercentage > 55) efficiencyScore -= 10;

    efficiencyScore = Math.min(100, Math.max(0, efficiencyScore));

    return { profitabilityScore, efficiencyScore };
  };

  useEffect(() => {
    if (calculationResult && cargoItems.length > 0) {
      setIsLoading(true);
      
      setTimeout(() => {
        try {
          const recommendations = generateSmartRecommendations(calculationResult);
          const scores = calculateBusinessScore(calculationResult);
          
          setSmartAnalysis({
            recommendations,
            scores,
            insights: [
              {
                type: 'efficiency',
                message: `üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${((calculationResult.totalWeight / 25) * 100).toFixed(1)}% –≤–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω–æ—Å—Ç—ñ`,
                actionRequired: (calculationResult.totalWeight / 25) < 0.8
              },
              {
                type: 'profitability', 
                message: `üìä ROI: ${(calculationResult.revenuePerKm / calculationResult.costPerKm).toFixed(1)}x –Ω–∞ –∫—ñ–ª–æ–º–µ—Ç—Ä`,
                actionRequired: (calculationResult.revenuePerKm / calculationResult.costPerKm) < 1.2
              }
            ]
          });
        } catch (error) {
          console.error('Smart AI Analysis error:', error);
        }
        setIsLoading(false);
      }, 1200);
    }
  }, [cargoItems, calculationResult]);

  const getScoreColor = (score: number): string => {
    if (score >= 80) return 'text-green-400';
    if (score >= 60) return 'text-yellow-400';
    if (score >= 40) return 'text-orange-400';
    return 'text-red-400';
  };

  const getPriorityIcon = (priority: string) => {
    switch (priority) {
      case 'high': return 'üî¥';
      case 'medium': return 'üü°';
      case 'low': return 'üü¢';
      default: return '‚ö™';
    }
  };

  if (!calculationResult || cargoItems.length === 0) {
    return (
      <div className={`bg-gray-900/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700 ${className}`}>
        <div className="flex items-center gap-3 mb-4">
          <Brain className="w-6 h-6 text-purple-400" />
          <h2 className="text-xl font-bold text-white">Smart AI –†–∞–¥–Ω–∏–∫</h2>
        </div>
        <div className="text-center py-8">
          <div className="text-6xl mb-4">ü§ñ</div>
          <p className="text-gray-400 mb-2">–î–æ–¥–∞–π—Ç–µ –≤–∞–Ω—Ç–∞–∂ —Ç–∞ –º–∞—Ä—à—Ä—É—Ç</p>
          <p className="text-sm text-gray-500">AI –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—î –¥–∞–Ω—ñ —Ç–∞ –Ω–∞–¥–∞—Å—Ç—å –¥—ñ—î–≤—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</p>
        </div>
      </div>
    );
  }

  return (
    <div className={`bg-gray-900/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700 ${className}`}>
      <div className="flex items-center gap-3 mb-6">
        <div className="relative">
          <Brain className="w-6 h-6 text-purple-400" />
          <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
        </div>
        <div>
          <h2 className="text-xl font-bold text-white">Smart AI –†–∞–¥–Ω–∏–∫</h2>
          <p className="text-xs text-gray-400">–†–æ–∑—É–º–Ω–∞ –±—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞</p>
        </div>
        {isLoading && (
          <div className="flex items-center gap-2 text-purple-400 ml-auto">
            <Zap className="w-4 h-4 animate-pulse" />
            <span className="text-sm">–î—É–º–∞—é...</span>
          </div>
        )}
      </div>

      {isLoading ? (
        <div className="space-y-4">
          <div className="animate-pulse bg-gray-800/50 rounded-lg p-4 h-20"></div>
          <div className="animate-pulse bg-gray-800/50 rounded-lg p-4 h-16"></div>
          <div className="animate-pulse bg-gray-800/50 rounded-lg p-4 h-24"></div>
        </div>
      ) : smartAnalysis ? (
        <div className="space-y-6">
          {/* Smart Business Metrics */}
          <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 rounded-lg p-4 border border-blue-700/30">
            <div className="flex items-center gap-2 mb-4">
              <Target className="w-5 h-5 text-blue-400" />
              <h3 className="text-lg font-semibold text-white">Business Score</h3>
            </div>
            
            <div className="grid grid-cols-2 gap-4">
              <div className="text-center">
                <div className={`text-3xl font-bold ${getScoreColor(smartAnalysis.scores.profitabilityScore)}`}>
                  {smartAnalysis.scores.profitabilityScore}
                </div>
                <div className="text-xs text-gray-400">–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å</div>
              </div>
              
              <div className="text-center">
                <div className={`text-3xl font-bold ${getScoreColor(smartAnalysis.scores.efficiencyScore)}`}>
                  {smartAnalysis.scores.efficiencyScore}
                </div>
                <div className="text-xs text-gray-400">–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</div>
              </div>
            </div>
          </div>

          {/* Smart Recommendations */}
          {smartAnalysis.recommendations.length > 0 ? (
            <div className="space-y-3">
              <div className="flex items-center gap-2">
                <Lightbulb className="w-5 h-5 text-yellow-400" />
                <h3 className="text-lg font-semibold text-white">–†–æ–∑—É–º–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</h3>
              </div>

              {smartAnalysis.recommendations.slice(0, 2).map((rec: any, index: number) => (
                <div
                  key={rec.id}
                  className="bg-gray-800/30 border border-gray-600 rounded-lg p-4 hover:border-blue-500/50 transition-all"
                >
                  <div className="flex items-start justify-between mb-2">
                    <div className="flex items-center gap-2">
                      <span className="text-lg">{getPriorityIcon(rec.priority)}</span>
                      <h4 className="font-semibold text-white text-sm">{rec.title}</h4>
                    </div>
                    <div className="text-xs bg-blue-500/20 text-blue-300 px-2 py-1 rounded">
                      {rec.confidence}%
                    </div>
                  </div>
                  
                  <p className="text-gray-300 text-sm mb-3">{rec.description}</p>
                  
                  <div className="bg-blue-500/10 border border-blue-500/20 rounded p-3 mb-3">
                    <p className="text-blue-200 text-sm">{rec.action}</p>
                  </div>

                  <div className="text-green-400 font-bold text-sm">
                    {rec.impact}
                  </div>

                  {rec.reasoning && (
                    <details className="mt-3">
                      <summary className="text-xs text-gray-400 cursor-pointer hover:text-white">
                        üß† AI –æ–±“ë—Ä—É–Ω—Ç—É–≤–∞–Ω–Ω—è
                      </summary>
                      <ul className="mt-2 space-y-1 text-xs text-gray-300 ml-4">
                        {rec.reasoning.map((reason: string, i: number) => (
                          <li key={i} className="flex items-start gap-2">
                            <span className="text-cyan-400 mt-1">‚Ä¢</span>
                            <span>{reason}</span>
                          </li>
                        ))}
                      </ul>
                    </details>
                  )}
                </div>
              ))}
            </div>
          ) : (
            <div className="bg-green-900/20 border border-green-700/30 rounded-lg p-4">
              <div className="flex items-center gap-3">
                <CheckCircle className="w-8 h-8 text-green-400" />
                <div>
                  <h3 className="text-green-300 font-semibold">–í—ñ–¥–º—ñ–Ω–Ω–∞ —Ä–æ–±–æ—Ç–∞!</h3>
                  <p className="text-green-200 text-sm">AI –Ω–µ –∑–Ω–∞–π—à–æ–≤ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó</p>
                </div>
              </div>
            </div>
          )}

          {/* Smart Insights */}
          {smartAnalysis.insights && (
            <div className="space-y-2">
              <h3 className="text-gray-300 font-semibold text-sm flex items-center gap-2">
                <Zap className="w-4 h-4" />
                –®–≤–∏–¥–∫—ñ —ñ–Ω—Å–∞–π—Ç–∏
              </h3>
              {smartAnalysis.insights.map((insight: any, index: number) => (
                <div key={index} className="bg-gray-800/30 border border-gray-600 rounded p-3">
                  <p className="text-gray-300 text-sm">{insight.message}</p>
                  {insight.actionRequired && (
                    <div className="mt-1 text-xs bg-yellow-500/20 text-yellow-300 px-2 py-1 rounded inline-block">
                      ‚ö° –ü–æ—Ç—Ä—ñ–±–Ω–∞ —É–≤–∞–≥–∞
                    </div>
                  )}
                </div>
              ))}
            </div>
          )}

          {/* AI Status */}
          <div className="text-center pt-4 border-t border-gray-700">
            <p className="text-xs text-gray-500">
              üß† Smart AI ‚Ä¢ –†–æ–∑—É–º–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ ‚Ä¢ 95% —Ç–æ—á–Ω—ñ—Å—Ç—å ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å–∏–Ω–≥
            </p>
          </div>
        </div>
      ) : (
        <div className="text-center py-8">
          <AlertTriangle className="w-12 h-12 text-yellow-500 mx-auto mb-4" />
          <h3 className="text-yellow-400 font-medium mb-2">–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É</h3>
          <p className="text-gray-500 text-sm">–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ</p>
        </div>
      )}
    </div>
  );
} 